o4 = score.new_obj_by_name("comment");
o4.set_prop("marker in score", 0);
o4.set_prop("caption_enable", 1);
o4.set_prop("delay_update", 0);
o4.set_prop("text", 'Example to control separate csound running osc_test2.csd');
o4.set_prop("start", 0);
o4.set_prop("marker direction", 0);
o4.set_prop("ypos", 60);
o4.set_prop("font_size", 10);
o1 = score.new_obj_by_name("datagen");
o1.set_prop("alt_score_text", '');
o1.set_prop("length", 11.5905);
o1.set_prop("caption_enable", 1);
o1.set_prop("font_size", 8);
o1.set_prop("delay_update", 0);
o1.set_prop("text", 'out.data = [
  [0,  [7, 400]],
  [1.5,[5, 300]],
  [2,  [4, 350]],
  [1.5,[10,200]],
  [4,  [8, 600]],
  [6,  [5, 100]],
];');
o1.set_prop("start", 0);
o1.set_prop("ypos", 90);
o1.set_prop("aux_inputs", [ 'A', 'B', 'C' ]);
o1.query_inlets();
o2 = score.new_obj_by_name("evgraph");
o2.set_prop("height", 100);
o2.set_prop("length", 11.5905);
o2.set_prop("caption_enable", 1);
o2.set_prop("delay_update", 0);
o2.set_prop("size_parm", nil);
o2.set_prop("start", 0);
o2.set_prop("ypos", 210);
o2.set_prop("grid", 100);
o2.set_prop("dur_parm", 0);
o2.set_prop("black_parm", nil);
o2.set_prop("size_scale", 10);
o2.set_prop("y_parm", 1);
o2.query_inlets();
c = o2.connect(o1,"out","events",7.932405566600398);
c.set_prop("transfer func", '');
c.set_prop("hide_inlet", 0);
o0 = score.new_obj_by_name("jitter");
o0.set_prop("end value", 0.5);
o0.set_prop("aux_inputs", [  ]);
o0.set_prop("transfer func", '');
o0.set_prop("filled", 0);
o0.set_prop("height", 50);
o0.set_prop("length", 11.5567);
o0.set_prop("base line", 0.5);
o0.set_prop("caption_enable", 1);
o0.set_prop("max duration", 1);
o0.set_prop("min value", 0.1);
o0.set_prop("delay_update", 0);
o0.set_prop("linewidth", 1);
o0.set_prop("time_randomizer", 'math.rand()*(max-min)+min');
o0.set_prop("labels", 1);
o0.set_prop("invert plot", 0);
o0.set_prop("start", 0);
o0.set_prop("seed", 1.22517e+09);
o0.set_prop("max value", 0.9);
o0.set_prop("value_randomizer", 'math.rand()*(max-min)+min');
o0.set_prop("ypos", 375);
o0.set_prop("start value", 0.5);
o0.set_prop("min duration", 0.1);
o0.query_inlets();
o3 = score.new_obj_by_name("osc_bus");
o3.set_prop("controllers", { note : [ '/note', 'ff' ], pw : [ '/pw', 'f' ] });
o3.set_prop("resolution", 0.01);
o3.set_prop("caption_enable", 1);
o3.set_prop("delay_update", 0);
o3.set_prop("ypos", 345);
o3.set_prop("osc_address", 'osc.udp://localhost:7770');
o3.query_inlets();
c = o3.connect(o1,"out","note",8.707753479125248);
c.set_prop("transfer func", '');
c.set_prop("hide_inlet", 0);
c = o3.connect(o0,"out","pw",5.776154212738099);
c.set_prop("transfer func", '');
c.set_prop("hide_inlet", 0);
score.marks = [ { type : 'end', time : 11.839 } ];
score.metadata = { composer : '', subtitle : '', title : '' };
