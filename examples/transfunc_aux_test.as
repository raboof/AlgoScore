o5 = score.new_obj_by_name("comment");
o5.set_prop("marker direction", 0);
o5.set_prop("delay_update", 0);
o5.set_prop("marker in score", 0);
o5.set_prop("start", 0.347323);
o5.set_prop("ypos", 105);
o5.set_prop("caption_enable", 1);
o5.set_prop("font_size", 10);
o5.set_prop("text", 'A linseg from 0 to 1 is passed through sin()
to make exactly one cycle sine.
An \'add\' aux inlet is added to the value.');
o4 = score.new_obj_by_name("comment");
o4.set_prop("marker direction", 0);
o4.set_prop("delay_update", 0);
o4.set_prop("marker in score", 0);
o4.set_prop("start", 0.142087);
o4.set_prop("ypos", 75);
o4.set_prop("caption_enable", 1);
o4.set_prop("font_size", 14);
o4.set_prop("text", 'Example of aux inlets and transfer functions.');
o6 = score.new_obj_by_name("comment");
o6.set_prop("marker direction", 0);
o6.set_prop("delay_update", 0);
o6.set_prop("marker in score", 0);
o6.set_prop("start", 6.32825);
o6.set_prop("ypos", 465);
o6.set_prop("caption_enable", 1);
o6.set_prop("font_size", 10);
o6.set_prop("text", '<- x^2 is used to shape the
   curve of a linseg.');
o7 = score.new_obj_by_name("comment");
o7.set_prop("marker direction", 0);
o7.set_prop("delay_update", 0);
o7.set_prop("marker in score", 0);
o7.set_prop("start", 6.32825);
o7.set_prop("ypos", 375);
o7.set_prop("caption_enable", 1);
o7.set_prop("font_size", 10);
o7.set_prop("text", '<- An \'amp\' aux input scales the
   value of a noise lfo.');
o2 = score.new_obj_by_name("linseg");
o2.set_prop("delay_update", 0);
o2.set_prop("aux_inputs", [  ]);
o2.set_prop("shape data", [ 0, 2, 1, 1, 0 ]);
o2.set_prop("transfer func", 'math.pow(x,2)');
o2.set_prop("max value", 1);
o2.set_prop("height", 50);
o2.set_prop("filled", 1);
o2.set_prop("start", 2.08077);
o2.set_prop("proportional", 1);
o2.set_prop("ypos", 450);
o2.set_prop("linewidth", 1.5);
o2.set_prop("caption_enable", 1);
o2.set_prop("length", 4.02381);
o2.set_prop("base line", 0);
o2.set_prop("invert plot", 0);
o2.set_prop("labels", 1);
o2.set_prop("min value", 0);
o1 = score.new_obj_by_name("noise");
o1.set_prop("out.resolution", 0.05);
o1.set_prop("delay_update", 0);
o1.set_prop("aux_inputs", [ 'amp' ]);
o1.set_prop("out.interpolate", 0);
o1.set_prop("transfer func", 'x*in.amp(t)');
o1.set_prop("seed", 1234);
o1.set_prop("max value", 1);
o1.set_prop("height", 50);
o1.set_prop("filled", 0);
o1.set_prop("start", 2.08077);
o1.set_prop("ypos", 360);
o1.set_prop("linewidth", 1);
o1.set_prop("caption_enable", 1);
o1.set_prop("length", 4.02381);
o1.set_prop("base line", 0);
o1.set_prop("invert plot", 0);
o1.set_prop("labels", 1);
o1.set_prop("min value", -1);
o1.query_inlets();
c = o1.connect(o2,"out","amp",2.202380952380963);
c.set_prop("transfer func", '');
c.set_prop("hide_inlet", 0);
o3 = score.new_obj_by_name("linseg");
o3.set_prop("delay_update", 0);
o3.set_prop("aux_inputs", [  ]);
o3.set_prop("shape data", [ 0, 1, 1, 0, 0, 1, 0.5, 1, 0 ]);
o3.set_prop("transfer func", '');
o3.set_prop("max value", 1);
o3.set_prop("height", 50);
o3.set_prop("filled", 1);
o3.set_prop("start", 6.10458);
o3.set_prop("proportional", 1);
o3.set_prop("ypos", 90);
o3.set_prop("linewidth", 1.5);
o3.set_prop("caption_enable", 1);
o3.set_prop("length", 1.9881);
o3.set_prop("base line", 0);
o3.set_prop("invert plot", 0);
o3.set_prop("labels", 0);
o3.set_prop("min value", 0);
o0 = score.new_obj_by_name("linseg");
o0.set_prop("delay_update", 0);
o0.set_prop("aux_inputs", [ 'add' ]);
o0.set_prop("shape data", [ 0, 1, 1 ]);
o0.set_prop("transfer func", 'math.sin(x*6.283) + in.add(t)');
o0.set_prop("max value", 1.2);
o0.set_prop("height", 150);
o0.set_prop("filled", 0);
o0.set_prop("start", 0.311322);
o0.set_prop("proportional", 1);
o0.set_prop("ypos", 165);
o0.set_prop("linewidth", 1.5);
o0.set_prop("caption_enable", 1);
o0.set_prop("length", 9.69643);
o0.set_prop("base line", 0);
o0.set_prop("invert plot", 0);
o0.set_prop("labels", 0);
o0.set_prop("min value", -1.2);
o0.query_inlets();
c = o0.connect(o3,"out","add",6.934523809523811);
c.set_prop("transfer func", 'x*0.5');
c.set_prop("hide_inlet", 0);
c = o0.connect(o1,"out","add",4.910714285714287);
c.set_prop("transfer func", 'x*0.5');
c.set_prop("hide_inlet", 0);
o2.add_link(o1,0);
score.marks = [ { type : 'end', time : 10.4032 } ];
score.metadata = { composer : '', title : '', subtitle : '' };
