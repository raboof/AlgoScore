o4 = score.new_obj_by_name("shape");
o4.set_prop("shape data", [ 0, 1, 0 ]);
o4.set_prop("filled", 0);
o4.set_prop("height", 50);
o4.set_prop("max value", 1);
o4.set_prop("start", 7.867735682189045);
o4.set_prop("ypos", 510);
o4.set_prop("linewidth", 1);
o4.set_prop("length", 5.086782940795658);
o4.set_prop("base line", 0);
o4.set_prop("min value", 0);
o5 = score.new_obj_by_name("sine");
o5.set_prop("out.resolution", 0.02);
o5.set_prop("out.amp", 1);
o5.set_prop("filled", 0);
o5.set_prop("height", 70);
o5.set_prop("max value", 1);
o5.set_prop("start", 7.867735682189045);
o5.set_prop("ypos", 420);
o5.set_prop("linewidth", 1);
o5.set_prop("length", 5.086782940795658);
o5.set_prop("base line", 0);
o5.set_prop("out.freq", 2);
o5.set_prop("min value", -1);
o5.query_inlets();
c = o5.connect(o4,"out","amp",2.537979252319046);
c.set_prop("transfer func", 'math.pow(x,2)');
o7 = score.new_obj_by_name("shape");
o7.set_prop("shape data", [ 0, -1, 1, 0 ]);
o7.set_prop("filled", 0);
o7.set_prop("height", 50);
o7.set_prop("max value", 1);
o7.set_prop("start", 0.6375899645929517);
o7.set_prop("ypos", 330);
o7.set_prop("linewidth", 1);
o7.set_prop("length", 5.649686514007376);
o7.set_prop("base line", 0);
o7.set_prop("min value", -1);
o8 = score.new_obj_by_name("noise");
o8.set_prop("out.resolution", 0.05);
o8.set_prop("out.interpolate", 0);
o8.set_prop("seed", 1196729143.912136);
o8.set_prop("filled", 0);
o8.set_prop("height", 50);
o8.set_prop("max value", 1);
o8.set_prop("start", 7.004367264770055);
o8.set_prop("ypos", 345);
o8.set_prop("linewidth", 1);
o8.set_prop("length", 7);
o8.set_prop("base line", 0);
o8.set_prop("min value", -1);
o8.query_inlets();
o2 = score.new_obj_by_name("shape");
o2.set_prop("shape data", [ 0, 1 ]);
o2.set_prop("filled", 0);
o2.set_prop("height", 50);
o2.set_prop("max value", 1);
o2.set_prop("start", 0);
o2.set_prop("ypos", 510);
o2.set_prop("linewidth", 1);
o2.set_prop("length", 7.004367264770049);
o2.set_prop("base line", 0);
o2.set_prop("min value", 0);
o3 = score.new_obj_by_name("sine");
o3.set_prop("out.resolution", 0.02);
o3.set_prop("out.amp", 1);
o3.set_prop("filled", 0);
o3.set_prop("height", 70);
o3.set_prop("max value", 1);
o3.set_prop("start", 0);
o3.set_prop("ypos", 405);
o3.set_prop("linewidth", 1);
o3.set_prop("length", 7.004367264770049);
o3.set_prop("base line", 0);
o3.set_prop("out.freq", 5);
o3.set_prop("min value", -1);
o3.query_inlets();
c = o3.connect(o2,"out","freq_mul",1.494587781921216);
c.set_prop("transfer func", 'math.pow(x,3)');
o0 = score.new_obj_by_name("datagen");
o0.set_prop("start", 0);
o0.set_prop("ypos", 120);
o0.set_prop("length", 14.21268381298666);
o0.set_prop("alt_score_text", '');
o0.set_prop("text", 'out.resolution=0;
out.interpolate=0;
out.data = setsize([],200);
math.seed(1334);
forindex(i;out.data) {
  t = math.quant((math.rand())*length,0.01);
  n = math.quant(math.rand2(20,100),6);
  v = 20+math.linrand()*100;
  d = math.linrand()+0.1;
  out.data[i] = [t,[n,v,d]];
}
');
o0.set_prop("font_size", 10);
o0.query_inlets();
o1 = score.new_obj_by_name("evgraph");
o1.set_prop("black_parm", 1);
o1.set_prop("height", 100);
o1.set_prop("start", 0);
o1.set_prop("ypos", -50);
o1.set_prop("dur_parm", 2);
o1.set_prop("y_parm", 0);
o1.set_prop("length", 14.21268381298666);
o1.query_inlets();
c = o1.connect(o0,"out","events",2.5);
c.set_prop("transfer func", '');
o9 = score.new_obj_by_name("midibus");
o9.set_prop("port_id", 'midi_0');
o9.set_prop("resolution", 0.01);
o9.set_prop("ypos", 285);
o9.set_prop("channel", 1);
o9.set_prop("export_enable", 1);
o9.set_prop("export_file", '');
o9.set_prop("controllers", { vol : 7 });
o9.query_inlets();
c = o9.connect(o0,"out","note",3.660714285714285);
c.set_prop("transfer func", '');
c = o9.connect(o7,"out","pitch",2.631754321936865);
c.set_prop("transfer func", '');
c = o9.connect(o5,"out","pitch",9.841719545103857);
c.set_prop("transfer func", '');
c = o9.connect(o3,"out","vol",1.315877160968433);
c.set_prop("transfer func", '(x+1)/2');
c = o9.connect(o8,"out","vol",8.671429112090074);
c.set_prop("transfer func", '(x+1)/2');
o2.add_link(o3,0);
o8.add_link(o3,0);
o4.add_link(o5,0);
score.marks = [ { type : 'end', time : 14.46428571428571 } ]